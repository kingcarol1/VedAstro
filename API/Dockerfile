#this file exists to RUN DOCKER locally in VS2022 and in Render Server
#this is not DEFAULT docker file
#note using isolated for perfomance & package freedom
FROM mcr.microsoft.com/azure-functions/dotnet-isolated:4-dotnet-isolated7.0 AS base
WORKDIR /home/site/wwwroot
EXPOSE 80
#this is run from solution folder even though placed in API folder
#so paths need to include folder "API"
#path values are very important, cause of most failures
#a temp project build is made in "src" then use that to make the final container
FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src
COPY ["API/API.csproj", "API/"]
COPY ["Library/Library.csproj", "Library/"]
RUN dotnet restore "API/API.csproj"
RUN dotnet restore "Library/Library.csproj"
COPY . .
WORKDIR "/src"
RUN dotnet build "Library/Library.csproj" -c Release --verbosity detailed
WORKDIR "/src/API"  
RUN dotnet build "API.csproj" -c Release -o /app/build --verbosity detailed
FROM build AS publish
RUN dotnet publish "API/API.csproj" -c Release -o /app/publish /p:UseAppHost=false
FROM base AS final
WORKDIR /home/site/wwwroot
COPY --from=publish /app/publish .
ENV AzureWebJobsScriptRoot=/home/site/wwwroot \
    AzureFunctionsJobHost__Logging__Console__IsEnabled=true
